/*
 * Copyright (c) 2008-2016, GigaSpaces Technologies, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.gigaspaces.annotation.pojo;

import com.gigaspaces.metadata.index.SpaceIndexType;

import java.lang.annotation.Retention;
import java.lang.annotation.Target;

import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.ElementType.TYPE;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

/**
 * <p>
 * To designate a property as the entity's primary key. The getter method of the POJO object
 * provides a matchable fields for the space. Define whether this field value to be used as when
 * generating UID. The field value should be unique, i.e. no multiple objects with the same value
 * should be written into the space, each object should have a different field value. When writing
 * an object into the space with existing PrimaryKey field value EntryAlreadyInSpaceException will
 * be thrown. UID is created based on the PrimaryKey field value.
 * </p>
 * <p>
 * To designate multiple properties as a composite primary key, use this annotation on the class and
 * use {@link #properties()} to list the participating properties. Naturally {@link #properties()}
 * and {@link #autoGenerate()} cannot be used together, as composite key cannot be autogenerated.
 * </p>
 *
 * @author Lior Ben Yizhak
 * @since 5.1
 */
@Target({METHOD, TYPE})
@Retention(RUNTIME)
public @interface SpaceId {
    /**
     * The <i>auto-generate</i> property defines how a unique ID is generated. By default, the
     * <i>auto-generate</i> is <b><code>false</code></b>, indicating that a unique ID will be
     * generated from the annotated field's supplied value's <code>toString()</code>. This field can
     * be of any type, but it's value's string representation enforces uniqueness. <p> When
     * <i>auto-generate</i> is <code>true</code>, it indicates that a unique ID will be generated by
     * the space (when first written) injecting the UID <code>String</code> value into this field -
     * which must be of type {@link String}.
     */
    boolean autoGenerate() default false;

    /**
     * When used at the class level, denotes the properties which participate in a composite space id.
     * @since 16.2
     */
    String[] properties() default {};

    /**
     * Indicated if the space id should be indexed, and if so with which index type. By default, when
     * {@link #autoGenerate()} is true the property is not indexed, otherwise it's indexed with either a regular
     * {@link SpaceIndexType#EQUAL} index or a compound index, depending if the id is a single or multiple properties.
     * @since 16.2
     */
    SpaceIndexType indexType() default SpaceIndexType.DEFAULT;
}